// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weather.Models;

#nullable disable

namespace Weather.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Weather.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CloudBase")
                        .HasColumnType("int");

                    b.Property<int?>("Cloudiness")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfTaking")
                        .HasColumnType("datetime2");

                    b.Property<float>("DewPoint")
                        .HasColumnType("real");

                    b.Property<int?>("HorizontalVisibility")
                        .HasColumnType("int");

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<int>("Pressure")
                        .HasColumnType("int");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<TimeSpan>("TimeOfTaking")
                        .HasColumnType("time");

                    b.Property<int?>("WeatherConditionId")
                        .HasColumnType("int");

                    b.Property<string>("WindDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WindSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeatherConditionId");

                    b.ToTable("WeatherInfos");
                });

            modelBuilder.Entity("Weather.Models.WeatherCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeatherConditions");
                });

            modelBuilder.Entity("Weather.Models.Weather", b =>
                {
                    b.HasOne("Weather.Models.WeatherCondition", "WeatherCondition")
                        .WithMany()
                        .HasForeignKey("WeatherConditionId");

                    b.Navigation("WeatherCondition");
                });
#pragma warning restore 612, 618
        }
    }
}
